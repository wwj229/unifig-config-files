spring.application.name=unifig-organ
#server.port=8024
server.port=8200
# 注册中心
#是否将自己注册到Eureka-Server中，默认的为true
eureka.client.registerWithEureka=false
#是否从Eureka-Server中获取服务注册信息，默认为true
eureka.client.fetchRegistry=false
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
eureka.client.serviceUrl.defaultZone=http://unifig:cmF0ZWw=@127.0.0.1:10001/eureka/
# 版本
info.version=0.0.1


spring.sleuth.sampler.probability=1


#===log start===
#\u65E5\u5FD7\u914D\u7F6EDEBUG,INFO,WARN,ERROR
logging.level.root=info
#\u5355\u72EC\u914D\u7F6E\u65E5\u5FD7\u7EA7\u522B
logging.level.com.ratel=info
#\u914D\u7F6E\u65E5\u5FD7\u751F\u6210\u8DEF\u5F84
#logging.path=/var/logs
#\u914D\u7F6E\u65E5\u5FD7\u6587\u4EF6\u540D\u79F0
#logging.file=demo_log.log
#===log end===

#===thymeleaf start===
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#\u5F00\u53D1\u65F6\u5173\u95ED\u7F13\u5B58,\u4E0D\u7136\u6CA1\u6CD5\u770B\u5230\u5B9E\u65F6\u9875\u9762
spring.thymeleaf.cache=false
#===thymeleaf end==

#===JWT start===
#JWT\u5B58\u50A8\u7684\u8BF7\u6C42\u5934
jwt.tokenHeader=Authorization
#JWT\u52A0\u89E3\u5BC6\u4F7F\u7528\u7684\u5BC6\u94A5
jwt.secret=mySecret
#JWT\u7684\u8D85\u671F\u9650\u65F6\u95F4(60*60*24)
jwt.expiration=9460800000000
#JWT\u8D1F\u8F7D\u4E2D\u62FF\u5230\u5F00\u5934
jwt.tokenHead=Bearer 
#===JWT end===

#===OSS start===
aliyun.oss.endpoint=oss-cn-shenzhen.aliyuncs.com
aliyun.oss.accessKeyId=test
aliyun.oss.accessKeySecret=test
aliyun.oss.bucketName=macro-oss
aliyun.oss.policy.expire=300
aliyun.oss.maxSize=10
aliyun.oss.callback=http://localhost:8080/aliyun/oss/callback
aliyun.oss.dir.prefix=mall/images/
#===OSS end===


#===datasource start===
spring.datasource.url=jdbc:mysql://localhost:3306/unifig?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
# mysql配置
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#===datasource end===

#===mybatis start===
mybatis-plus.global-config.db-config.db-type=MYSQL
mybatis.mapper-locations= classpath*:com/ratel/organ/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
##mybatis-plus_config
mybatis-plus.mapper-locations= classpath:/dao/*.xml
mybatis-plus.typeAliasesPackage= com.jusha.system.entity
mybatis-plus.global-config.db-column-underline= true
mybatis-plus.global-config.refresh-mapper= true
mybatis-plus.configuration.map-underscore-to-camel-case= true
mybatis-plus.configuration.cache-enabled= false
spring.zipkin.base-url=http://127.0.0.1:10030/
spring.zipkin.enabled=true
#mybatis.mapper-locations=classpath:dao/*.xml,classpath*:com/unifig/mall/mapper/*.xml
#mybatis.mapper-locations=classpath*:com/unifig/organ/**/*.xml
#mybatis.mapperLocations=classpath:dao/*.xml,classpath:mapper/*.xml
mybatis.typeAliasesPackage=com.unifig.organ.model
#===mybatis end===

#===druid start===
#\u8FDE\u63A5\u6C60\u521D\u59CB\u5316\u5927\u5C0F
spring.datasource.druid.initial-size=5
#\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570
spring.datasource.druid.min-idle=10
#\u6700\u5927\u8FDE\u63A5\u6570
spring.datasource.druid.max-active=20
#\u4E0D\u7EDF\u8BA1\u8FD9\u4E9B\u8BF7\u6C42\u6570\u636E
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#\u8BBF\u95EE\u76D1\u63A7\u7F51\u9875\u7684\u767B\u5F55\u7528\u6237\u540D\u548C\u5BC6\u7801
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
#===druid end===


#===redis custom key start===
redis.key.prefix.authCode=portal:authCode:
redis.key.prefix.orderId=portal:orderId:
authCode.expire.seconds=90
#===redis custom key end===

#===rabbitmq queue name start===
rabbitmq.queue.name.cancelOrder="cancelOrderQueue"
#===rabbitmq queue name end===

#===logging start===
logging.level.org.springframework.data.mongodb.core=debug
logging.level.com.unifig.mall.mapper=debug
logging.level.com.unifig.mall.portal.dao=debug
#===logging end===

#===mongodb start===
spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.port=27017
spring.data.mongodb.database=mall-port
#===mongodb end===

#===redis start===
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=127.0.0.1
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=0
#===redis end===

#===rabbitMq start===
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
#spring.rabbitmq.virtual-host=/mall
spring.rabbitmq.username=mq
spring.rabbitmq.password=
#\u5982\u679C\u5BF9\u5F02\u6B65\u6D88\u606F\u9700\u8981\u56DE\u8C03\u5FC5\u987B\u8BBE\u7F6E\u4E3Atrue
#spring.rabbitmq.publisher-confirms=true
#===rabbitMq end===


#===es start===
spring.data.elasticsearch.repositories.enabled = true
spring.data.elasticsearch.cluster-nodes = 127.0.0.1:9300
#===es end===
#
#spring.boot.admin.auto-registration = true
#spring.boot.admin.url = http://localhost:1125
#spring.boot.admin.api-path = instances
#management.security.enabled = false