spring.application.name=unifig-analysis

server.port=8500
# 注册中心
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
eureka.client.service-url.defaultZone=http://unifig:cmF0ZWw=@127.0.0.1:10001/eureka/
# 版本
info.version=0.0.1


spring.sleuth.sampler.probability=1


spring.data.mongodb.uri=mongodb://:27017/unifig

db.name=
db.file.name.image=image
db.file.name.html=html
db.file.name=file


# limit upload file size
spring.http.multipart.max-file-size=500MB
spring.http.multipart.max-request-size=500MB

#===JWT start===
#JWT\u5B58\u50A8\u7684\u8BF7\u6C42\u5934
jwt.tokenHeader=Authorization
#JWT\u52A0\u89E3\u5BC6\u4F7F\u7528\u7684\u5BC6\u94A5
jwt.secret=mySecret
#JWT\u7684\u8D85\u671F\u9650\u65F6\u95F4(60*60*24)
jwt.expiration=9460800000000
#JWT\u8D1F\u8F7D\u4E2D\u62FF\u5230\u5F00\u5934
jwt.tokenHead=Bearer 
#===JWT end===

#===mybatis start===
#mybatis.mapper-locations=classpath*:com/unifig/bi/analysis/**/*.xml
#mybatis.typeAliasesPackage=com.unifig.bi.analysis.model
#===mybatis end===

##mybatis-plus_config
mybatis-plus.mapper-locations= classpath*:com/unifig/bi/analysis/**/*.xml
mybatis-plus.typeAliasesPackage= com.unifig.bi.analysis.model
mybatis-plus.global-config.db-column-underline= true
mybatis-plus.global-config.refresh-mapper= true
mybatis-plus.configuration.map-underscore-to-camel-case= true
mybatis-plus.configuration.cache-enabled= false


#===datasource start===
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/bi_st?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
# mysql配置
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#===datasource end===

#===redis start===
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=16379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=ratel
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=0
#===redis end===


#数据开始时间
st.data.start.ds.date=20180813
st.data.start.ws.date=20180813
st.data.start.ms.date=201809
st.data.start.event.date=201808
st.data.start.engine.message.date=201808
st.data.start.schedule.date=201808


#===log start===
#\u65E5\u5FD7\u914D\u7F6EDEBUG,INFO,WARN,ERROR
logging.level.root=info
#\u5355\u72EC\u914D\u7F6E\u65E5\u5FD7\u7EA7\u522B
logging.level.com.unifig.bi=info
#\u914D\u7F6E\u65E5\u5FD7\u751F\u6210\u8DEF\u5F84
#logging.path=/var/logs
#\u914D\u7F6E\u65E5\u5FD7\u6587\u4EF6\u540D\u79F0
#logging.file=demo_log.log
#===log end===